
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'startAND ASC AVG BETWEEN BIGGER BIGGER_EQUAL BY COLNAME COLNUMBER COMMA COUNT DATASOURCE DELETE DESC DISTINCT DIVIDE EQUAL EXISTS FROM GROUP HAVING IN INSERT INTO IS LIKE LIMIT LPAREN MAX MIN MINUS NOT NOTEQUAL NULL NUMBER OR ORDER PATTERN PERCENT PLUS RPAREN SELECT SET SIMICOLON SMALLER SMALLER_EQUAL STRING SUM TIMES UPDATE VALUES WHEREstart : select \n             | insert \n             | update \n             | deleteempty :select : SELECT distinct select_columns FROM DATASOURCE into where group order limit SIMICOLONinsert : INSERT INTO DATASOURCE icolumn VALUES LPAREN values RPAREN SIMICOLON\n              | INSERT INTO DATASOURCE LPAREN select RPAREN SIMICOLONexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : factorfactor : NUMBERterm : term DIVIDE factorfactor : LPAREN expression RPARENlogical :  EQUAL \n                | NOTEQUAL \n                | BIGGER_EQUAL \n                | BIGGER \n                | SMALLER_EQUAL \n                | SMALLERwhere : WHERE conditionswhere : emptyconditions : LPAREN conditions RPARENconditions : conditions AND conditions \n                  | conditions OR conditions\n                  | exp LIKE STRING\n                  | exp logical expconditions : NOT conditionsexp : STRING\n           | COLNAME\n           | expressiondistinct : DISTINCTdistinct : emptyselect_columns : TIMESselect_columns : COLNUMBERselect_columns : COLNAMEselect_columns : select_columns COMMA select_columnsinto : INTO DATASOURCEinto : emptygroup : GROUP BY db_columngroup : emptydb_column : COLNAME \n                    | COLNUMBERorders : ORDER BY ordersorders : db_column wayorders : orders COMMA ordersorder : emptyway : ASC \n           | emptyway : DESClimit : LIMIT NUMBERlimit : emptyvalues : STRING\n             | NUMBERvalues : values COMMA valuesicolumn : emptyupdate : UPDATE DATASOURCE SET assigns where SIMICOLONassigns : COLNAME EQUAL\n               | emptydelete : DELETE FROM DATASOURCE where'
    
_lr_action_items = {'SELECT':([0,26,],[6,6,]),'INSERT':([0,],[7,]),'UPDATE':([0,],[8,]),'DELETE':([0,],[9,]),'$end':([1,2,3,4,5,22,31,33,40,43,45,46,47,48,49,55,68,78,79,80,81,82,83,84,86,87,88,89,99,107,],[0,-1,-2,-3,-4,-5,-62,-24,-23,-31,-32,-33,-11,-13,-14,-59,-30,-8,-26,-27,-25,-16,-28,-29,-9,-10,-12,-15,-7,-6,]),'DISTINCT':([6,],[11,]),'TIMES':([6,10,11,12,24,47,48,49,82,86,87,88,89,],[-5,17,-34,-35,17,71,-13,-14,-16,71,71,-12,-15,]),'COLNUMBER':([6,10,11,12,24,98,],[-5,18,-34,-35,18,106,]),'COLNAME':([6,10,11,12,21,24,32,41,44,56,57,61,62,63,64,65,66,67,98,],[-5,19,-34,-35,29,19,45,45,45,45,45,45,-17,-18,-19,-20,-21,-22,105,]),'INTO':([7,34,],[13,51,]),'DATASOURCE':([8,13,15,23,51,],[14,20,22,34,74,]),'FROM':([9,16,17,18,19,35,],[15,23,-36,-37,-38,-39,]),'SET':([14,],[21,]),'COMMA':([16,17,18,19,35,75,76,77,100,],[24,-36,-37,-38,24,94,-55,-56,94,]),'LPAREN':([20,32,36,41,44,56,57,61,62,63,64,65,66,67,69,70,71,72,85,],[26,41,53,41,41,41,41,85,-17,-18,-19,-20,-21,-22,85,85,85,85,85,]),'VALUES':([20,25,27,],[-5,36,-58,]),'WHERE':([21,22,28,30,34,39,50,52,74,],[-5,32,32,-61,-5,-60,32,-41,-40,]),'SIMICOLON':([21,28,30,33,34,38,39,40,43,45,46,47,48,49,50,52,54,68,73,74,79,80,81,82,83,84,86,87,88,89,90,92,93,96,97,101,103,104,105,106,108,],[-5,-5,-61,-24,-5,55,-60,-23,-31,-32,-33,-11,-13,-14,-5,-41,78,-30,-5,-40,-26,-27,-25,-16,-28,-29,-9,-10,-12,-15,-5,-43,99,-5,-49,107,-54,-42,-44,-45,-53,]),'EQUAL':([29,42,43,45,46,47,48,49,59,82,86,87,88,89,],[39,62,-31,-32,-33,-11,-13,-14,-33,-16,-9,-10,-12,-15,]),'NOT':([32,41,44,56,57,],[44,44,44,44,44,]),'STRING':([32,41,44,53,56,57,60,61,62,63,64,65,66,67,94,],[43,43,43,76,43,43,83,43,-17,-18,-19,-20,-21,-22,76,]),'NUMBER':([32,41,44,53,56,57,61,62,63,64,65,66,67,69,70,71,72,85,94,102,],[49,49,49,77,49,49,49,-17,-18,-19,-20,-21,-22,49,49,49,49,49,77,108,]),'GROUP':([33,34,40,43,45,46,47,48,49,50,52,68,73,74,79,80,81,82,83,84,86,87,88,89,],[-24,-5,-23,-31,-32,-33,-11,-13,-14,-5,-41,-30,91,-40,-26,-27,-25,-16,-28,-29,-9,-10,-12,-15,]),'LIMIT':([33,34,40,43,45,46,47,48,49,50,52,68,73,74,79,80,81,82,83,84,86,87,88,89,90,92,96,97,104,105,106,],[-24,-5,-23,-31,-32,-33,-11,-13,-14,-5,-41,-30,-5,-40,-26,-27,-25,-16,-28,-29,-9,-10,-12,-15,-5,-43,102,-49,-42,-44,-45,]),'RPAREN':([37,43,45,46,47,48,49,58,59,68,75,76,77,79,80,81,82,83,84,86,87,88,89,95,100,107,],[54,-31,-32,-33,-11,-13,-14,81,82,-30,93,-55,-56,-26,-27,-25,-16,-28,-29,-9,-10,-12,-15,82,-57,-6,]),'AND':([40,43,45,46,47,48,49,58,68,79,80,81,82,83,84,86,87,88,89,],[56,-31,-32,-33,-11,-13,-14,56,56,56,56,-25,-16,-28,-29,-9,-10,-12,-15,]),'OR':([40,43,45,46,47,48,49,58,68,79,80,81,82,83,84,86,87,88,89,],[57,-31,-32,-33,-11,-13,-14,57,57,57,57,-25,-16,-28,-29,-9,-10,-12,-15,]),'LIKE':([42,43,45,46,47,48,49,59,82,86,87,88,89,],[60,-31,-32,-33,-11,-13,-14,-33,-16,-9,-10,-12,-15,]),'NOTEQUAL':([42,43,45,46,47,48,49,59,82,86,87,88,89,],[63,-31,-32,-33,-11,-13,-14,-33,-16,-9,-10,-12,-15,]),'BIGGER_EQUAL':([42,43,45,46,47,48,49,59,82,86,87,88,89,],[64,-31,-32,-33,-11,-13,-14,-33,-16,-9,-10,-12,-15,]),'BIGGER':([42,43,45,46,47,48,49,59,82,86,87,88,89,],[65,-31,-32,-33,-11,-13,-14,-33,-16,-9,-10,-12,-15,]),'SMALLER_EQUAL':([42,43,45,46,47,48,49,59,82,86,87,88,89,],[66,-31,-32,-33,-11,-13,-14,-33,-16,-9,-10,-12,-15,]),'SMALLER':([42,43,45,46,47,48,49,59,82,86,87,88,89,],[67,-31,-32,-33,-11,-13,-14,-33,-16,-9,-10,-12,-15,]),'PLUS':([46,47,48,49,59,82,86,87,88,89,95,],[69,-11,-13,-14,69,-16,-9,-10,-12,-15,69,]),'MINUS':([46,47,48,49,59,82,86,87,88,89,95,],[70,-11,-13,-14,70,-16,-9,-10,-12,-15,70,]),'DIVIDE':([47,48,49,82,86,87,88,89,],[72,-13,-14,-16,72,72,-12,-15,]),'BY':([91,],[98,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'select':([0,26,],[2,37,]),'insert':([0,],[3,]),'update':([0,],[4,]),'delete':([0,],[5,]),'distinct':([6,],[10,]),'empty':([6,20,21,22,28,34,50,73,90,96,],[12,27,30,33,33,52,33,92,97,103,]),'select_columns':([10,24,],[16,35,]),'icolumn':([20,],[25,]),'assigns':([21,],[28,]),'where':([22,28,50,],[31,38,73,]),'conditions':([32,41,44,56,57,],[40,58,68,79,80,]),'exp':([32,41,44,56,57,61,],[42,42,42,42,42,84,]),'expression':([32,41,44,56,57,61,85,],[46,59,46,46,46,46,95,]),'term':([32,41,44,56,57,61,69,70,85,],[47,47,47,47,47,47,86,87,47,]),'factor':([32,41,44,56,57,61,69,70,71,72,85,],[48,48,48,48,48,48,48,48,88,89,48,]),'into':([34,],[50,]),'logical':([42,],[61,]),'values':([53,94,],[75,100,]),'group':([73,],[90,]),'order':([90,],[96,]),'limit':([96,],[101,]),'db_column':([98,],[104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> select','start',1,'p_start','yacc.py',8),
  ('start -> insert','start',1,'p_start','yacc.py',9),
  ('start -> update','start',1,'p_start','yacc.py',10),
  ('start -> delete','start',1,'p_start','yacc.py',11),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',15),
  ('select -> SELECT distinct select_columns FROM DATASOURCE into where group order limit SIMICOLON','select',11,'p_select','yacc.py',28),
  ('insert -> INSERT INTO DATASOURCE icolumn VALUES LPAREN values RPAREN SIMICOLON','insert',9,'p_insert','yacc.py',58),
  ('insert -> INSERT INTO DATASOURCE LPAREN select RPAREN SIMICOLON','insert',7,'p_insert','yacc.py',59),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',73),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',77),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',81),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',85),
  ('term -> factor','term',1,'p_term_factor','yacc.py',89),
  ('factor -> NUMBER','factor',1,'p_factor_num','yacc.py',93),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',97),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','yacc.py',101),
  ('logical -> EQUAL','logical',1,'p_logical','yacc.py',111),
  ('logical -> NOTEQUAL','logical',1,'p_logical','yacc.py',112),
  ('logical -> BIGGER_EQUAL','logical',1,'p_logical','yacc.py',113),
  ('logical -> BIGGER','logical',1,'p_logical','yacc.py',114),
  ('logical -> SMALLER_EQUAL','logical',1,'p_logical','yacc.py',115),
  ('logical -> SMALLER','logical',1,'p_logical','yacc.py',116),
  ('where -> WHERE conditions','where',2,'p_where','yacc.py',126),
  ('where -> empty','where',1,'p_where_empty','yacc.py',130),
  ('conditions -> LPAREN conditions RPAREN','conditions',3,'p_cond_parens','yacc.py',134),
  ('conditions -> conditions AND conditions','conditions',3,'p_cond_3','yacc.py',138),
  ('conditions -> conditions OR conditions','conditions',3,'p_cond_3','yacc.py',139),
  ('conditions -> exp LIKE STRING','conditions',3,'p_cond_3','yacc.py',140),
  ('conditions -> exp logical exp','conditions',3,'p_cond_3','yacc.py',141),
  ('conditions -> NOT conditions','conditions',2,'p_conditions_not','yacc.py',145),
  ('exp -> STRING','exp',1,'p_exp','yacc.py',155),
  ('exp -> COLNAME','exp',1,'p_exp','yacc.py',156),
  ('exp -> expression','exp',1,'p_exp','yacc.py',157),
  ('distinct -> DISTINCT','distinct',1,'p_distinct','yacc.py',167),
  ('distinct -> empty','distinct',1,'p_distinct_empty','yacc.py',171),
  ('select_columns -> TIMES','select_columns',1,'p_select_columns_all','yacc.py',181),
  ('select_columns -> COLNUMBER','select_columns',1,'p_column_number','yacc.py',185),
  ('select_columns -> COLNAME','select_columns',1,'p_column_name','yacc.py',189),
  ('select_columns -> select_columns COMMA select_columns','select_columns',3,'p_columns','yacc.py',193),
  ('into -> INTO DATASOURCE','into',2,'p_into','yacc.py',205),
  ('into -> empty','into',1,'p_into_empty','yacc.py',209),
  ('group -> GROUP BY db_column','group',3,'p_group','yacc.py',219),
  ('group -> empty','group',1,'p_group_empty','yacc.py',223),
  ('db_column -> COLNAME','db_column',1,'p_db_column','yacc.py',227),
  ('db_column -> COLNUMBER','db_column',1,'p_db_column','yacc.py',228),
  ('orders -> ORDER BY orders','orders',3,'p_order_by','yacc.py',238),
  ('orders -> db_column way','orders',2,'p_order','yacc.py',242),
  ('orders -> orders COMMA orders','orders',3,'p_orders','yacc.py',246),
  ('order -> empty','order',1,'p_order_empty','yacc.py',252),
  ('way -> ASC','way',1,'p_way_asc','yacc.py',256),
  ('way -> empty','way',1,'p_way_asc','yacc.py',257),
  ('way -> DESC','way',1,'p_way_desc','yacc.py',261),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit','yacc.py',271),
  ('limit -> empty','limit',1,'p_limit_empty','yacc.py',278),
  ('values -> STRING','values',1,'p_value','yacc.py',287),
  ('values -> NUMBER','values',1,'p_value','yacc.py',288),
  ('values -> values COMMA values','values',3,'p_values','yacc.py',292),
  ('icolumn -> empty','icolumn',1,'p_icolumn','yacc.py',298),
  ('update -> UPDATE DATASOURCE SET assigns where SIMICOLON','update',6,'p_update','yacc.py',308),
  ('assigns -> COLNAME EQUAL','assigns',2,'p_assigns','yacc.py',312),
  ('assigns -> empty','assigns',1,'p_assigns','yacc.py',313),
  ('delete -> DELETE FROM DATASOURCE where','delete',4,'p_delete','yacc.py',323),
]
