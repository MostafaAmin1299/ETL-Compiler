
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'selectAND ASC AVG BETWEEN BIGGER_THAN BIGGER_THAN_OR_EQUAL_TO BY COLNAME COMMA COUNT DATASOURCE DELETE DESC DISTINCT DIVIDE EQUAL EXISTS FROM GROUP HAVING IN INSERT INTO IS LIKE LIMIT LPAREN MAX MIN MINUS NOT NOTEQUAL NULL NUMBER OR ORDER PATTERN PERCENT PLUS RPAREN SELECT SET SIMICOLON SMALLER_THAN SMALLER_THAN_OR_EQUAL_TO STRING SUM TIMES UPDATE VALUES WHEREexpression : expression PLUS termexpression : expression MINUS termexpression : termterm : term TIMES factorterm : factorfactor : NUMBERterm : term DIVIDE factorfactor : LPAREN expression RPARENwhere : WHERE cond\n             | emptycond : exp op exp\n            | exp BETWEEN exp AND exp\n            | exp IN tuple\n            | exp is\n            | exp LIKE STRING\n            | EXISTS LPAREN select RPAREN\n            | cond AND cond\n            | cond OR cond\n            | NOT cond\n            | LPAREN cond RPARENexp : STRING\n           | NUMBER\n           | COLNAME\n           | exp aop expexps\xa0: exp \n            | exp COMMA expsop : EQUAL\n          | BIGGER_THAN\n          | SMALLER_THAN\n          | NOTEQUAL\n          | BIGGER_THAN_OR_EQUAL_TO\n          | SMALLER_THAN_OR_EQUAL_TOaop : PLUS\n           | MINUS\n           | TIMES\n           | DIVIDE\n           | PERCENTtuple : select\n             | exps\n             | emptyis : IS NULL\n          | IS NOT NULLempty :select : SELECT distinct\xa0column into FROM DATASOURCE where group\xa0order limit SIMICOLONdistinct : DISTINCT\xa0\n                | emptycolumn : TIMES\n              | COLNAME\n              | aggregatefuncolumn : column COMMA COLNAMEaggregatefun : aggregatename LPAREN distinct column RPARENaggregatename : COUNT\n                     | MAX\n                     | MIN\n                     | SUM\n                     | AVGinto : INTO DATASOURCE external\n    | emptyexternal : IN column\n                | emptygroup : GROUP BY column having\n             | emptyhaving : HAVING cond\n              | emptyorder : ORDER BY orders\n             | emptyorders : column way\n              | orders COMMA ordersway : ASC\n           | DESC\n           | emptylimit : LIMIT NUMBER\n             | emptyinsert : INSERT INTO DATASOURCE icolumn VALUES LPAREN value RPAREN SIMICOLON\n              | INSERT INTO DATASOURCE icolumn select SIMICOLONvalue : STRING\n             | NUMBER\n             | value COMMA valueicolumn : LPAREN COLNAME RPAREN\n               | emptyupdate : UPDATE\xa0DATASOURCE SET assigns where SIMICOLONassigns : column EQUAL value\n               | assigns COMMA assignsdelete : DELETE FROM DATASOURCE where'
    
_lr_action_items = {'SELECT':([0,54,70,],[2,2,2,]),'$end':([1,93,],[0,-44,]),'DISTINCT':([2,20,],[4,4,]),'TIMES':([2,3,4,5,20,24,27,39,40,44,45,49,76,80,81,82,88,104,110,],[-43,7,-45,-46,-43,7,7,67,-21,-22,-23,7,7,67,67,67,67,7,67,]),'COLNAME':([2,3,4,5,17,20,24,27,31,42,43,49,50,51,52,53,54,57,58,59,60,61,62,63,65,66,67,68,69,76,98,100,101,104,],[-43,8,-45,-46,22,-43,8,8,45,45,45,8,45,45,45,45,45,45,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,8,45,45,45,8,]),'COUNT':([2,3,4,5,20,24,27,49,76,104,],[-43,11,-45,-46,-43,11,11,11,11,11,]),'MAX':([2,3,4,5,20,24,27,49,76,104,],[-43,12,-45,-46,-43,12,12,12,12,12,]),'MIN':([2,3,4,5,20,24,27,49,76,104,],[-43,13,-45,-46,-43,13,13,13,13,13,]),'SUM':([2,3,4,5,20,24,27,49,76,104,],[-43,14,-45,-46,-43,14,14,14,14,14,]),'AVG':([2,3,4,5,20,24,27,49,76,104,],[-43,15,-45,-46,-43,15,15,15,15,15,]),'COMMA':([6,7,8,9,22,29,33,34,40,44,45,77,82,88,95,96,105,106,107,108,112,],[17,-47,-48,-49,-50,17,17,-51,-21,-22,-23,17,101,-24,104,17,-67,-69,-70,-71,104,]),'INTO':([6,7,8,9,22,34,],[18,-47,-48,-49,-50,-51,]),'FROM':([6,7,8,9,16,19,22,23,26,28,33,34,],[-43,-47,-48,-49,21,-58,-50,-43,-57,-60,-59,-51,]),'RPAREN':([7,8,9,22,29,34,40,44,45,54,55,71,72,78,79,80,82,83,84,85,86,87,88,89,91,92,93,102,103,110,111,],[-47,-48,-49,-50,34,-51,-21,-22,-23,-43,-14,92,-19,-17,-18,-11,-25,-13,-38,-39,-40,-15,-24,-41,103,-20,-44,-42,-16,-12,-26,]),'HAVING':([7,8,9,22,34,77,],[-47,-48,-49,-50,-51,98,]),'ORDER':([7,8,9,22,25,30,32,34,35,37,38,40,44,45,54,55,72,77,78,79,80,82,83,84,85,86,87,88,89,92,93,97,99,102,103,109,110,111,],[-47,-48,-49,-50,-43,-43,-10,-51,47,-62,-9,-21,-22,-23,-43,-14,-19,-43,-17,-18,-11,-25,-13,-38,-39,-40,-15,-24,-41,-20,-44,-61,-64,-42,-16,-63,-12,-26,]),'LIMIT':([7,8,9,22,25,30,32,34,35,37,38,40,44,45,46,48,54,55,72,77,78,79,80,82,83,84,85,86,87,88,89,92,93,95,96,97,99,102,103,105,106,107,108,109,110,111,112,],[-47,-48,-49,-50,-43,-43,-10,-51,-43,-62,-9,-21,-22,-23,74,-66,-43,-14,-19,-43,-17,-18,-11,-25,-13,-38,-39,-40,-15,-24,-41,-20,-44,-65,-43,-61,-64,-42,-16,-67,-69,-70,-71,-63,-12,-26,-68,]),'SIMICOLON':([7,8,9,22,25,30,32,34,35,37,38,40,44,45,46,48,54,55,72,73,75,77,78,79,80,82,83,84,85,86,87,88,89,92,93,94,95,96,97,99,102,103,105,106,107,108,109,110,111,112,],[-47,-48,-49,-50,-43,-43,-10,-51,-43,-62,-9,-21,-22,-23,-43,-66,-43,-14,-19,93,-73,-43,-17,-18,-11,-25,-13,-38,-39,-40,-15,-24,-41,-20,-44,-72,-65,-43,-61,-64,-42,-16,-67,-69,-70,-71,-63,-12,-26,-68,]),'ASC':([7,8,9,22,34,96,],[-47,-48,-49,-50,-51,106,]),'DESC':([7,8,9,22,34,96,],[-47,-48,-49,-50,-51,107,]),'LPAREN':([10,11,12,13,14,15,31,41,42,43,50,51,98,],[20,-52,-53,-54,-55,-56,42,70,42,42,42,42,42,]),'DATASOURCE':([18,21,],[23,25,]),'IN':([23,39,40,44,45,88,],[27,54,-21,-22,-23,-24,]),'WHERE':([25,],[31,]),'GROUP':([25,30,32,38,40,44,45,54,55,72,78,79,80,82,83,84,85,86,87,88,89,92,93,102,103,110,111,],[-43,36,-10,-9,-21,-22,-23,-43,-14,-19,-17,-18,-11,-25,-13,-38,-39,-40,-15,-24,-41,-20,-44,-42,-16,-12,-26,]),'EXISTS':([31,42,43,50,51,98,],[41,41,41,41,41,41,]),'NOT':([31,42,43,50,51,64,98,],[43,43,43,43,43,90,43,]),'STRING':([31,42,43,50,51,52,53,54,56,57,58,59,60,61,62,63,65,66,67,68,69,98,100,101,],[40,40,40,40,40,40,40,40,87,40,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,40,40,40,]),'NUMBER':([31,42,43,50,51,52,53,54,57,58,59,60,61,62,63,65,66,67,68,69,74,98,100,101,],[44,44,44,44,44,44,44,44,44,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-37,94,44,44,44,]),'BY':([36,47,],[49,76,]),'AND':([38,40,44,45,54,55,71,72,78,79,80,81,82,83,84,85,86,87,88,89,92,93,102,103,109,110,111,],[50,-21,-22,-23,-43,-14,50,50,50,50,-11,100,-25,-13,-38,-39,-40,-15,-24,-41,-20,-44,-42,-16,50,-12,-26,]),'OR':([38,40,44,45,54,55,71,72,78,79,80,82,83,84,85,86,87,88,89,92,93,102,103,109,110,111,],[51,-21,-22,-23,-43,-14,51,51,51,51,-11,-25,-13,-38,-39,-40,-15,-24,-41,-20,-44,-42,-16,51,-12,-26,]),'BETWEEN':([39,40,44,45,88,],[53,-21,-22,-23,-24,]),'LIKE':([39,40,44,45,88,],[56,-21,-22,-23,-24,]),'EQUAL':([39,40,44,45,88,],[58,-21,-22,-23,-24,]),'BIGGER_THAN':([39,40,44,45,88,],[59,-21,-22,-23,-24,]),'SMALLER_THAN':([39,40,44,45,88,],[60,-21,-22,-23,-24,]),'NOTEQUAL':([39,40,44,45,88,],[61,-21,-22,-23,-24,]),'BIGGER_THAN_OR_EQUAL_TO':([39,40,44,45,88,],[62,-21,-22,-23,-24,]),'SMALLER_THAN_OR_EQUAL_TO':([39,40,44,45,88,],[63,-21,-22,-23,-24,]),'IS':([39,40,44,45,88,],[64,-21,-22,-23,-24,]),'PLUS':([39,40,44,45,80,81,82,88,110,],[65,-21,-22,-23,65,65,65,65,65,]),'MINUS':([39,40,44,45,80,81,82,88,110,],[66,-21,-22,-23,66,66,66,66,66,]),'DIVIDE':([39,40,44,45,80,81,82,88,110,],[68,-21,-22,-23,68,68,68,68,68,]),'PERCENT':([39,40,44,45,80,81,82,88,110,],[69,-21,-22,-23,69,69,69,69,69,]),'NULL':([64,90,],[89,102,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'select':([0,54,70,],[1,84,91,]),'distinct':([2,20,],[3,24,]),'empty':([2,6,20,23,25,30,35,46,54,77,96,],[5,19,5,28,32,37,48,75,86,99,108,]),'column':([3,24,27,49,76,104,],[6,29,33,77,96,96,]),'aggregatefun':([3,24,27,49,76,104,],[9,9,9,9,9,9,]),'aggregatename':([3,24,27,49,76,104,],[10,10,10,10,10,10,]),'into':([6,],[16,]),'external':([23,],[26,]),'where':([25,],[30,]),'group':([30,],[35,]),'cond':([31,42,43,50,51,98,],[38,71,72,78,79,109,]),'exp':([31,42,43,50,51,52,53,54,57,98,100,101,],[39,39,39,39,39,80,81,82,88,39,110,82,]),'order':([35,],[46,]),'op':([39,],[52,]),'is':([39,],[55,]),'aop':([39,80,81,82,88,110,],[57,57,57,57,57,57,]),'limit':([46,],[73,]),'tuple':([54,],[83,]),'exps':([54,101,],[85,111,]),'orders':([76,104,],[95,112,]),'having':([77,],[97,]),'way':([96,],[105,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> select","S'",1,None,None,None),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','yacc.py',7),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','yacc.py',11),
  ('expression -> term','expression',1,'p_expression_term','yacc.py',15),
  ('term -> term TIMES factor','term',3,'p_term_times','yacc.py',19),
  ('term -> factor','term',1,'p_term_factor','yacc.py',23),
  ('factor -> NUMBER','factor',1,'p_factor_num','yacc.py',27),
  ('term -> term DIVIDE factor','term',3,'p_term_div','yacc.py',31),
  ('factor -> LPAREN expression RPAREN','factor',3,'p_factor_expr','yacc.py',35),
  ('where -> WHERE cond','where',2,'p_where','yacc.py',42),
  ('where -> empty','where',1,'p_where','yacc.py',43),
  ('cond -> exp op exp','cond',3,'p_cond','yacc.py',47),
  ('cond -> exp BETWEEN exp AND exp','cond',5,'p_cond','yacc.py',48),
  ('cond -> exp IN tuple','cond',3,'p_cond','yacc.py',49),
  ('cond -> exp is','cond',2,'p_cond','yacc.py',50),
  ('cond -> exp LIKE STRING','cond',3,'p_cond','yacc.py',51),
  ('cond -> EXISTS LPAREN select RPAREN','cond',4,'p_cond','yacc.py',52),
  ('cond -> cond AND cond','cond',3,'p_cond','yacc.py',53),
  ('cond -> cond OR cond','cond',3,'p_cond','yacc.py',54),
  ('cond -> NOT cond','cond',2,'p_cond','yacc.py',55),
  ('cond -> LPAREN cond RPAREN','cond',3,'p_cond','yacc.py',56),
  ('exp -> STRING','exp',1,'p_exp','yacc.py',62),
  ('exp -> NUMBER','exp',1,'p_exp','yacc.py',63),
  ('exp -> COLNAME','exp',1,'p_exp','yacc.py',64),
  ('exp -> exp aop exp','exp',3,'p_exp','yacc.py',65),
  ('exps -> exp','exps',1,'p_exps','yacc.py',69),
  ('exps -> exp COMMA exps','exps',3,'p_exps','yacc.py',70),
  ('op -> EQUAL','op',1,'p_op','yacc.py',74),
  ('op -> BIGGER_THAN','op',1,'p_op','yacc.py',75),
  ('op -> SMALLER_THAN','op',1,'p_op','yacc.py',76),
  ('op -> NOTEQUAL','op',1,'p_op','yacc.py',77),
  ('op -> BIGGER_THAN_OR_EQUAL_TO','op',1,'p_op','yacc.py',78),
  ('op -> SMALLER_THAN_OR_EQUAL_TO','op',1,'p_op','yacc.py',79),
  ('aop -> PLUS','aop',1,'p_aop','yacc.py',83),
  ('aop -> MINUS','aop',1,'p_aop','yacc.py',84),
  ('aop -> TIMES','aop',1,'p_aop','yacc.py',85),
  ('aop -> DIVIDE','aop',1,'p_aop','yacc.py',86),
  ('aop -> PERCENT','aop',1,'p_aop','yacc.py',87),
  ('tuple -> select','tuple',1,'p_tuple','yacc.py',91),
  ('tuple -> exps','tuple',1,'p_tuple','yacc.py',92),
  ('tuple -> empty','tuple',1,'p_tuple','yacc.py',93),
  ('is -> IS NULL','is',2,'p_is','yacc.py',97),
  ('is -> IS NOT NULL','is',3,'p_is','yacc.py',98),
  ('empty -> <empty>','empty',0,'p_empty','yacc.py',102),
  ('select -> SELECT distinct column into FROM DATASOURCE where group order limit SIMICOLON','select',11,'p_select','yacc.py',108),
  ('distinct -> DISTINCT','distinct',1,'p_distinct','yacc.py',113),
  ('distinct -> empty','distinct',1,'p_distinct','yacc.py',114),
  ('column -> TIMES','column',1,'p_column','yacc.py',118),
  ('column -> COLNAME','column',1,'p_column','yacc.py',119),
  ('column -> aggregatefun','column',1,'p_column','yacc.py',120),
  ('column -> column COMMA COLNAME','column',3,'p_columns','yacc.py',124),
  ('aggregatefun -> aggregatename LPAREN distinct column RPAREN','aggregatefun',5,'p_aggregatefun','yacc.py',135),
  ('aggregatename -> COUNT','aggregatename',1,'p_aggregatename','yacc.py',139),
  ('aggregatename -> MAX','aggregatename',1,'p_aggregatename','yacc.py',140),
  ('aggregatename -> MIN','aggregatename',1,'p_aggregatename','yacc.py',141),
  ('aggregatename -> SUM','aggregatename',1,'p_aggregatename','yacc.py',142),
  ('aggregatename -> AVG','aggregatename',1,'p_aggregatename','yacc.py',143),
  ('into -> INTO DATASOURCE external','into',3,'p_into','yacc.py',147),
  ('into -> empty','into',1,'p_into','yacc.py',148),
  ('external -> IN column','external',2,'p_external','yacc.py',152),
  ('external -> empty','external',1,'p_external','yacc.py',153),
  ('group -> GROUP BY column having','group',4,'p_group','yacc.py',157),
  ('group -> empty','group',1,'p_group','yacc.py',158),
  ('having -> HAVING cond','having',2,'p_having','yacc.py',162),
  ('having -> empty','having',1,'p_having','yacc.py',163),
  ('order -> ORDER BY orders','order',3,'p_order','yacc.py',167),
  ('order -> empty','order',1,'p_order','yacc.py',168),
  ('orders -> column way','orders',2,'p_orders','yacc.py',172),
  ('orders -> orders COMMA orders','orders',3,'p_orders','yacc.py',173),
  ('way -> ASC','way',1,'p_way','yacc.py',177),
  ('way -> DESC','way',1,'p_way','yacc.py',178),
  ('way -> empty','way',1,'p_way','yacc.py',179),
  ('limit -> LIMIT NUMBER','limit',2,'p_limit','yacc.py',183),
  ('limit -> empty','limit',1,'p_limit','yacc.py',184),
  ('insert -> INSERT INTO DATASOURCE icolumn VALUES LPAREN value RPAREN SIMICOLON','insert',9,'p_insert','yacc.py',190),
  ('insert -> INSERT INTO DATASOURCE icolumn select SIMICOLON','insert',6,'p_insert','yacc.py',191),
  ('value -> STRING','value',1,'p_value','yacc.py',195),
  ('value -> NUMBER','value',1,'p_value','yacc.py',196),
  ('value -> value COMMA value','value',3,'p_value','yacc.py',197),
  ('icolumn -> LPAREN COLNAME RPAREN','icolumn',3,'p_icolumn','yacc.py',201),
  ('icolumn -> empty','icolumn',1,'p_icolumn','yacc.py',202),
  ('update -> UPDATE DATASOURCE SET assigns where SIMICOLON','update',6,'p_update','yacc.py',208),
  ('assigns -> column EQUAL value','assigns',3,'p_assigns','yacc.py',212),
  ('assigns -> assigns COMMA assigns','assigns',3,'p_assigns','yacc.py',213),
  ('delete -> DELETE FROM DATASOURCE where','delete',4,'p_delete','yacc.py',220),
]
